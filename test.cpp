#include <iostream>
#include <vector>
#include <iterator>

 
R----685583454
   L----501650447
   |  L----500782188
   |  |  L----330111137
   |  |  |  L----152607844
   |  |  |  |  L----101027544
   |  |  |  |  |  L----6441594
   |  |  |  |  |  |  L----16807
   |  |  |  |  |  |  |  R----1277844
   |  |  |  |  |  |  R----57716395
   |  |  |  |  |  |     L----34075629
   |  |  |  |  |  |     R----60935238
   |  |  |  |  |  R----114807987
   |  |  |  |  |     R----121205400
   |  |  |  |  R----270649095
   |  |  |  |     L----197493099
   |  |  |  |     |  L----195400260
   |  |  |  |     |  |  L----174076737
   |  |  |  |     |  R----203042009
   |  |  |  |     |     L----197941363
   |  |  |  |     |     R----222122669
   |  |  |  |     R----304555640
   |  |  |  |        L----281725226
   |  |  |  |        |  L----272112289
   |  |  |  |        |  R----293034748
   |  |  |  |        |     L----290623720
   |  |  |  |        R----322842082
   |  |  |  |           L----307187357
   |  |  |  R----416541976
   |  |  |     L----388471006
   |  |  |     |  L----343098142
   |  |  |     |  R----411938554
   |  |  |     R----462851407
   |  |  |        L----440796531
   |  |  |        |  L----428540556
   |  |  |        |  R----459244054
   |  |  |        R----471180773
   |  |  |           R----487495370
   |  R----510616708
   |     R----563613512
   |        L----532236123
   |        |  L----530511967
   |        |  |  L----524102504
   |        |  R----541437335
   |        |     L----537140623
   |        |     R----543436550
   |        |        R----555860589

   R----1581030105
      L----1108728549
      |  L----996497972
      |  |  L----823378840
      |  |  |  L----750597385
      |  |  |  |  L----707953178
      |  |  |  |  |  L----690545035
      |  |  |  |  R----784170963
      |  |  |  |     L----771515668
      |  |  |  |     |  L----753799505
      |  |  |  |     R----794014915
      |  |  |  R----944975825
      |  |  |     L----884936716
      |  |  |     |  L----836045813
      |  |  |     |  |  L----828530767
      |  |  |     |  |  |  L----823564440
      |  |  |     |  |  R----843998877
      |  |  |     |  |     L----837204200
      |  |  |     |  |     R----862929593
      |  |  |     |  R----915896220
      |  |  |     |     L----896544303
      |  |  |     |     |  L----893351816
      |  |  |     |     |  R----907225550
      |  |  |     |     R----943454679
      |  |  |     R----989340000
      |  |  |        L----967113755
      |  |  |        R----994977995
      |  |  R----1075260298
      |  |     L----1042227878
      |  |     |  L----1012028144
      |  |     |  |  L----1004016855
      |  |     |  |  R----1021979358
      |  |     |  R----1044788124
      |  |     |     R----1073185695
      |  |     R----1103669955
      |  R----1458777923
      |     L----1190959745
      |     |  L----1154112991
      |     |  |  L----1144108930
      |     |  |  |  L----1112576031
      |     |  |  |  |  L----1110561113
      |     |  |  |  |  R----1137623865
      |     |  |  |  R----1153851501
      |     |  |  |     L----1147722294
      |     |  |  R----1168120094
      |     |  |     L----1163313729
      |     |  |     R----1189515557
      |     |  |        L----1172819419
      |     |  R----1290659378
      |     |     L----1264817709
      |     |     |  L----1238489553
      |     |     |  |  L----1194314738
      |     |     |  |  R----1260973671
      |     |     |  R----1269406752
      |     |     |     L----1267248590
      |     |     |     R----1289335735
      |     |     R----1399125485
      |     |        L----1341853635
      |     |        |  L----1334948905
      |     |        |  R----1356425228
      |     |        |     L----1353963249
      |     |        |     R----1358580979
      |     |        R----1437784630
      |     |           L----1433829874
      |     |           |  L----1399399247
      |     |           R----1441282327
      |     |              L----1439025357
      |     |              R----1442645480
      |     R----1522395419
      |        L----1479575244
      |        |  L----1459413496
      |        |  |  R----1465645203
      |        |  R----1494664305
      |        |     L----1486421564
      |        |     R----1495170053
      |        |        R----1502883016
      |        R----1534827968
      |           L----1532062767
      |           R----1551901393
      |              L----1547837107
      |              R----1580723810
      R----1828087692
         L----1681808623
         |  L----1635339425
         |  |  L----1622650073
         |  |  |  L----1592822761
         |  |  |  |  L----1586983133
         |  |  |  R----1623161625
         |  |  R----1646035001
         |  |     L----1640687929
         |  |     |  L----1637608155
         |  |     R----1660760808
         |  |        R----1668306648
         |  R----1777724115
         |     L----1723153177
         |     |  L----1719533808
         |     |  R----1737195272
         |     |     R----1746474819
         |     R----1784484492
         |        L----1778878209
         |        |  R----1780776563
         |        R----1817129560
         R----1904797942
            L----1902737335
            |  L----1864546517
            |  |  L----1859468872
            |  |  R----1866729662
            |  |     R----1893015680
            R----2035308228
               L----1942727722
               |  R----2020739063
               |     L----1954899097
               |     |  L----1952509530
               |     |  R----2014119113
               |     R----2034712366
               R----2118797801
                  L----2051621609
                  |  L----2043046042
                  |  |  R----2044747317
                  |  R----2111631616
                  |     R----2118498354
                  R----2128236579
                     L----2119878818
                     |  R----2121578553
                     R----2146319451
                        L----2145586676
// template <typename T, class Alloc = std::allocator<T> >
// class itr
// {
// public :
// 	typedef Alloc allocator_type;
// 	// typedef typename T value_type;

// private :
// 	T *ptr;
// 	allocator_type _alloc;

// public:
// 	// typedef typename itr<value_type> itrr;

// 	struct iterator
// 	{
// 		T *ptr;
// 		T value;

// 		T &operator*() const
// 		{
// 			 return *m_ptr;
// 		}
// 	};
// 	itr<T> begin()
// 	{
// 		return ptr[0];
// 	}

// 	void add()
// 	{
// 		ptr = _alloc.allocate(5);
// 		for (size_t i = 0; i < 5; i++)
// 		{
// 			ptr[i] = i;
// 			std::cout << ptr[i] << " ";
// 		}
// 		std::cout << std::endl;
		
// 	}

// 	void print()
// 	{
// 		for (size_t i = 0; i < 5; i++)
// 		{
// 			std::cout << ptr[i] << " ";
// 		}
// 		std::cout << std::endl;
// 	}

// 	T &value(int pos)
// 	{
// 		return ptr[pos];
// 	}
	
// };

template <class iter>
void	test(iter f)
{
	typedef typename std::iterator_traits<iter>::value_type a;
	a nb = *f;
	std::cout << nb << std::endl;
}

int main()
{
	std::vector<int> v(5, 1337);
	int tab[] = {1337, 42, 19};
	test(tab);
	// itr<int> c;

	// itr<int>::itr 
	// // c.add();

	// // c.print() ;

	// std::cout << c.value(3) << std::endl;

	// std::vector<int> vec;

	// vec.push_back(5);
	// vec.push_back(10);
	// vec.push_back(3);
	// vec.push_back(2);

	// std::vector<int>::iterator it;
	// std::vector<int>::iterator ite;


	// it = vec.begin();
	// ite = vec.end();

	// while (it != ite)
	// {
	// 	std::cout << *it << std::endl;
	// 	it++;
	// }
}
